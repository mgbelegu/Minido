{"version":3,"sources":["hoc/Auxiliary.js","components/Layout/Layout.js","containers/TodoAdder/TodoAdder.js","components/Buttons/DeleteButton.js","components/Buttons/DoneButton.js","components/TodoItem/TodoItem.js","components/TodoItem/TodoItemCompleted.js","App.js","reportWebVitals.js","index.js"],"names":["aux","props","children","layout","className","todoAdder","onSubmit","submitProp","placeholder","value","onChange","type","deleteButton","onClick","onDelete","doneButton","onDone","todoItem","name","modifyItemInput","doneItem","deleteItem","todoItemCompleted","readOnly","App","state","items","itemsCompleted","makeid","length","result","characters","charactersLength","i","charAt","Math","floor","random","isEmptyOrSpaces","str","match","inputHandler","event","setState","target","handleAddItem","push","id","preventDefault","handleCompleteItem","itemIndex","item","splice","deleteItemHandler","deleteItemCompletedHandler","indexC","modifyItemHandler","clearCompletedHandler","TodoAdder","this","map","index","e","indexCompleted","TodoItemCompleted","href","rel","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ff94e603.chunk.js","sourcesContent":["const aux = (props) => props.children;\r\n\r\nexport default aux;","import React from 'react';\r\nimport Aux from '../../hoc/Auxiliary';\r\nimport './Layout.css';\r\n\r\nconst layout = (props) => (\r\n    <Aux>\r\n        <main className=\"Content\">\r\n            <h1>Minido - Minimalist to do app</h1>\r\n            {props.children}\r\n        </main>\r\n    </Aux>\r\n);\r\n\r\nexport default layout;","import React from 'react';\r\nimport './TodoForm.css';\r\n\r\nconst todoAdder = (props) => {\r\n    return(\r\n        <form onSubmit={props.submitProp}>\r\n            <input className=\"itemInput\" placeholder=\"Buy groceries...\" value={props.value} onChange={props.onChange}/>\r\n            <input className=\"itemAdd\" type='submit' value='+' />\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default todoAdder;","import React from 'react';\r\nimport './Buttons.css';\r\n\r\nconst deleteButton = (props) => {\r\n    return <button className=\"delete\" onClick={props.onDelete}>&#10006;</button>\r\n};\r\n\r\nexport default deleteButton;","import React from 'react';\r\nimport './Buttons.css';\r\n\r\nconst doneButton = (props) => {\r\n    return <button className=\"done\" onClick={props.onDone}>&#10004;</button>\r\n};\r\n\r\nexport default doneButton;","import React from 'react';\r\nimport Delete from '../Buttons/DeleteButton';\r\nimport Done from '../Buttons/DoneButton';\r\nimport './TodoItem.css';\r\n\r\nconst todoItem = (props) => {\r\n        return (\r\n            <div className=\"itemDiv\">\r\n                <input className=\"listItem\" value={props.name} onChange={props.modifyItemInput}/>\r\n                <div>\r\n                    <Done onDone={props.doneItem}/>\r\n                    <Delete onDelete={props.deleteItem}/>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n}\r\n\r\nexport default todoItem;","import React from 'react';\r\nimport Delete from '../Buttons/DeleteButton';\r\nimport './TodoItem.css';\r\n\r\nconst todoItemCompleted = (props) => {\r\n        return (\r\n            <div className=\"itemDiv\">\r\n                <input className=\"listItem\" value={props.name} readOnly/>\r\n                <div>\r\n                    <Delete onDelete={props.deleteItem}/>\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n}\r\n\r\nexport default todoItemCompleted;","import React, {Component} from 'react';\r\nimport Layout from './components/Layout/Layout';\r\nimport TodoAdder from './containers/TodoAdder/TodoAdder';\r\nimport TodoItem from './components/TodoItem/TodoItem';\r\nimport TodoItemCompleted from './components/TodoItem/TodoItemCompleted';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n      value: '',\r\n      items: [],\r\n      itemsCompleted: []\r\n  }\r\n\r\n  makeid = (length) => {\r\n    let result           = '';\r\n    let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let charactersLength = characters.length;\r\n    for ( let i = 0; i < length; i++ ) {\r\n       result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  }\r\n\r\n  isEmptyOrSpaces = (str) => {\r\n    return str === null || str.match(/^ *$/) !== null;\r\n  }\r\n\r\n  inputHandler = (event) => {\r\n      this.setState({\r\n          value: event.target.value\r\n      });\r\n  };\r\n\r\n  handleAddItem = (event) => {\r\n    if(this.isEmptyOrSpaces(this.state.value)){\r\n      //do nothing\r\n    }else{\r\n      this.state.items.push({name: this.state.value, id: `${this.makeid(5)}`});\r\n        this.setState({\r\n          value: ''\r\n        });\r\n    }\r\n      event.preventDefault();\r\n  }\r\n\r\n  handleCompleteItem = (itemIndex, event) => {\r\n    const items = [...this.state.items];\r\n    const item = {...items[itemIndex]};\r\n    items[itemIndex] = item;\r\n    this.state.itemsCompleted.push(items[itemIndex]);\r\n    items.splice(itemIndex, 1)\r\n    this.setState({items: items});\r\n    event.preventDefault();\r\n  }\r\n\r\n  deleteItemHandler = (itemIndex) => {\r\n    const items = [...this.state.items];\r\n    items.splice(itemIndex, 1);\r\n    this.setState({items: items});\r\n  }\r\n\r\n  deleteItemCompletedHandler = (indexC) => {\r\n    const itemsCompleted = [...this.state.itemsCompleted];\r\n    itemsCompleted.splice(indexC, 1);\r\n    this.setState({itemsCompleted: itemsCompleted});\r\n  }\r\n\r\n  modifyItemHandler = (itemIndex, event) => {\r\n    const items = [...this.state.items];\r\n    const item = {...items[itemIndex]};\r\n    item.name = event.target.value;\r\n    items[itemIndex] = item;\r\n    this.setState({items});\r\n  }\r\n\r\n  clearCompletedHandler = () => {\r\n    this.setState({\r\n      itemsCompleted: []\r\n    });\r\n  }\r\n  \r\n  render(){\r\n    return(\r\n      <div>\r\n        <Layout>\r\n          <TodoAdder \r\n            submitProp={this.handleAddItem} \r\n            onChange={this.inputHandler} \r\n            value={this.state.value}/>\r\n          <h3>To-Do:</h3>\r\n          {this.state.items.map((item, index) => {\r\n            return <TodoItem \r\n              name={item.name}\r\n              deleteItem={() => this.deleteItemHandler(index)}\r\n              modifyItemInput={(e) => this.modifyItemHandler(index, e)}\r\n              doneItem={(e) => this.handleCompleteItem(index, e)}\r\n              key={item.id}/>;\r\n          })}\r\n          <h3 className=\"completedTitle\">Completed:</h3>\r\n          \r\n\r\n          {this.state.itemsCompleted.map((item, indexCompleted) => {\r\n            return <TodoItemCompleted \r\n              name={item.name}\r\n              deleteItem={() => this.deleteItemCompletedHandler(indexCompleted)}\r\n              key={item.id}/>;\r\n          })}\r\n        <p>Made by <a href=\"https://minimalistwebs.com/\" target=\"_blank\" rel=\"noreferrer\">MinimalistWebs</a> &copy; 2020</p>\r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}